// <auto-generated />
using ALPS.API.Data;
using ALPS.Common;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace ALPS.API.Data.Migrations
{
    [DbContext(typeof(ALPSContext))]
    [Migration("20171231183410_InitialApiMigration")]
    partial class InitialApiMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ALPS.API.Entities.Agent", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<string>("Address");

                    b.Property<int>("AgentType");

                    b.Property<string>("City");

                    b.Property<DateTime>("Created");

                    b.Property<string>("Email");

                    b.Property<string>("Fax");

                    b.Property<string>("FirstName");

                    b.Property<decimal>("InvolRepoPaid");

                    b.Property<string>("LastName");

                    b.Property<string>("Mobile");

                    b.Property<string>("Notes");

                    b.Property<string>("Phone");

                    b.Property<string>("State");

                    b.Property<long>("SubscriberId");

                    b.Property<decimal>("TracePaid");

                    b.Property<DateTime>("Updated");

                    b.Property<byte[]>("Version")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate();

                    b.Property<decimal>("VolRepoPaid");

                    b.Property<string>("Zip");

                    b.HasKey("Id");

                    b.HasIndex("SubscriberId");

                    b.ToTable("Agents");
                });

            modelBuilder.Entity("ALPS.API.Entities.Contact", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<string>("Address");

                    b.Property<string>("City");

                    b.Property<DateTime>("Created");

                    b.Property<string>("Email");

                    b.Property<long?>("EmployerId");

                    b.Property<string>("Fax");

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.Property<string>("LicenseNumber");

                    b.Property<string>("LicenseState");

                    b.Property<string>("Mobile");

                    b.Property<string>("Notes");

                    b.Property<long>("OrderId");

                    b.Property<string>("Phone");

                    b.Property<int>("RelationToDebtor");

                    b.Property<string>("SSN");

                    b.Property<string>("State");

                    b.Property<long>("SubscriberId");

                    b.Property<long?>("SubscriberId1");

                    b.Property<DateTime>("Updated");

                    b.Property<byte[]>("Version")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate();

                    b.Property<string>("Zip");

                    b.HasKey("Id");

                    b.HasIndex("EmployerId");

                    b.HasIndex("OrderId");

                    b.HasIndex("SubscriberId");

                    b.HasIndex("SubscriberId1");

                    b.ToTable("Contacts");
                });

            modelBuilder.Entity("ALPS.API.Entities.Employer", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<string>("Address");

                    b.Property<string>("City");

                    b.Property<DateTime>("Created");

                    b.Property<string>("Email");

                    b.Property<string>("EmploymentType");

                    b.Property<string>("Fax");

                    b.Property<string>("Mobile");

                    b.Property<string>("Name");

                    b.Property<string>("Notes");

                    b.Property<string>("Phone");

                    b.Property<string>("PrimaryContact");

                    b.Property<string>("State");

                    b.Property<long>("SubscriberId");

                    b.Property<DateTime>("Updated");

                    b.Property<byte[]>("Version")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate();

                    b.Property<string>("Zip");

                    b.HasKey("Id");

                    b.HasIndex("SubscriberId");

                    b.ToTable("Employers");
                });

            modelBuilder.Entity("ALPS.API.Entities.Expense", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("Amount");

                    b.Property<bool>("BillClient");

                    b.Property<DateTime>("Created");

                    b.Property<DateTime>("DatePaid");

                    b.Property<string>("Description");

                    b.Property<int>("ExpenseCategory");

                    b.Property<DateTime>("ExpenseDate");

                    b.Property<long>("OrderId");

                    b.Property<long>("SubscriberId");

                    b.Property<DateTime>("Updated");

                    b.Property<long>("VendorId");

                    b.Property<byte[]>("Version")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate();

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("SubscriberId");

                    b.HasIndex("VendorId");

                    b.ToTable("Expenses");
                });

            modelBuilder.Entity("ALPS.API.Entities.Lienholder", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<string>("Address");

                    b.Property<string>("City");

                    b.Property<DateTime>("Created");

                    b.Property<string>("Email");

                    b.Property<string>("Fax");

                    b.Property<string>("Mobile");

                    b.Property<string>("Name");

                    b.Property<string>("Notes");

                    b.Property<string>("Phone");

                    b.Property<string>("PrimaryContact");

                    b.Property<decimal>("PropertyDailyFee");

                    b.Property<int>("PropertyDaysFree");

                    b.Property<decimal>("PropertyInitialFee");

                    b.Property<string>("State");

                    b.Property<long>("SubscriberId");

                    b.Property<DateTime>("Updated");

                    b.Property<decimal>("VehicleDailyFee");

                    b.Property<int>("VehicleDaysFree");

                    b.Property<decimal>("VehicleInitialFee");

                    b.Property<byte[]>("Version")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate();

                    b.Property<string>("Zip");

                    b.HasKey("Id");

                    b.HasIndex("SubscriberId");

                    b.ToTable("Lienholders");
                });

            modelBuilder.Entity("ALPS.API.Entities.MakeModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<DateTime>("Created");

                    b.Property<int>("Manufacturer");

                    b.Property<int>("Model");

                    b.Property<string>("Notes");

                    b.Property<long>("SubscriberId");

                    b.Property<string>("Tips");

                    b.Property<DateTime>("Updated");

                    b.Property<byte[]>("Version")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate();

                    b.HasKey("Id");

                    b.HasIndex("SubscriberId");

                    b.ToTable("MakeModels");
                });

            modelBuilder.Entity("ALPS.API.Entities.Order", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<long?>("AgentId");

                    b.Property<decimal?>("Amt_Balance");

                    b.Property<decimal?>("Amt_Due");

                    b.Property<decimal?>("Amt_Loan");

                    b.Property<decimal?>("Amt_Payment");

                    b.Property<long?>("BillToClientId");

                    b.Property<long?>("BillToId");

                    b.Property<DateTime?>("Billed");

                    b.Property<string>("ClientRefNo")
                        .HasMaxLength(20);

                    b.Property<int?>("CloseReason");

                    b.Property<DateTime?>("Closed");

                    b.Property<DateTime>("Created");

                    b.Property<long>("DebtorId");

                    b.Property<DateTime?>("DueDate");

                    b.Property<DateTime?>("LastPayment");

                    b.Property<long>("LienholderId");

                    b.Property<DateTime?>("LoanDate");

                    b.Property<string>("Notes");

                    b.Property<string>("OrderNumber")
                        .HasMaxLength(6);

                    b.Property<int>("OrderStatus");

                    b.Property<int>("OrderType");

                    b.Property<DateTime?>("Paid");

                    b.Property<DateTime?>("PastDue");

                    b.Property<string>("Property");

                    b.Property<decimal>("PropertyDailyFee");

                    b.Property<int>("PropertyDaysFree");

                    b.Property<decimal>("PropertyInitialFee");

                    b.Property<DateTime?>("PropertyReleased");

                    b.Property<DateTime>("Received");

                    b.Property<string>("Remarks");

                    b.Property<DateTime?>("Repossessed");

                    b.Property<long>("SubscriberId");

                    b.Property<DateTime>("Updated");

                    b.Property<decimal>("VehicleDailyFee");

                    b.Property<int>("VehicleDaysFree");

                    b.Property<long>("VehicleId");

                    b.Property<decimal>("VehicleInitialFee");

                    b.Property<DateTime?>("VehicleReleased");

                    b.Property<byte[]>("Version")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate();

                    b.HasKey("Id");

                    b.HasIndex("AgentId");

                    b.HasIndex("BillToClientId");

                    b.HasIndex("DebtorId");

                    b.HasIndex("LienholderId");

                    b.HasIndex("SubscriberId");

                    b.HasIndex("VehicleId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("ALPS.API.Entities.PoliceDepartment", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<string>("Address");

                    b.Property<string>("City");

                    b.Property<DateTime>("Created");

                    b.Property<string>("Email");

                    b.Property<string>("Fax");

                    b.Property<string>("Mobile");

                    b.Property<string>("Name");

                    b.Property<string>("Notes");

                    b.Property<string>("Phone");

                    b.Property<string>("PrimaryContact");

                    b.Property<string>("State");

                    b.Property<long>("SubscriberId");

                    b.Property<DateTime>("Updated");

                    b.Property<byte[]>("Version")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate();

                    b.Property<string>("Zip");

                    b.HasKey("Id");

                    b.HasIndex("SubscriberId");

                    b.ToTable("PoliceDepartments");
                });

            modelBuilder.Entity("ALPS.API.Entities.Service", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<decimal>("BasePrice");

                    b.Property<DateTime>("Created");

                    b.Property<string>("Description");

                    b.Property<int>("FeeType");

                    b.Property<int>("ServiceType");

                    b.Property<long>("SubscriberId");

                    b.Property<DateTime>("Updated");

                    b.Property<byte[]>("Version")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate();

                    b.HasKey("Id");

                    b.HasIndex("SubscriberId");

                    b.ToTable("Services");
                });

            modelBuilder.Entity("ALPS.API.Entities.Subscriber", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<string>("Address");

                    b.Property<decimal>("Balance");

                    b.Property<string>("City");

                    b.Property<DateTime>("Created");

                    b.Property<string>("Email");

                    b.Property<string>("Fax");

                    b.Property<string>("Mobile");

                    b.Property<string>("Name");

                    b.Property<string>("Notes");

                    b.Property<string>("Phone");

                    b.Property<string>("PrimaryContact");

                    b.Property<string>("State");

                    b.Property<string>("TenantName");

                    b.Property<string>("Type");

                    b.Property<DateTime>("Updated");

                    b.Property<byte[]>("Version")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate();

                    b.Property<string>("Zip");

                    b.HasKey("Id");

                    b.ToTable("Subscribers");
                });

            modelBuilder.Entity("ALPS.API.Entities.Vehicle", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<string>("Color");

                    b.Property<DateTime>("Created");

                    b.Property<int>("Cylinders");

                    b.Property<string>("IgnitionCode");

                    b.Property<bool?>("Insured");

                    b.Property<long>("MakeModelId");

                    b.Property<string>("Notes");

                    b.Property<long>("SubscriberId");

                    b.Property<string>("Tag");

                    b.Property<string>("TagState");

                    b.Property<string>("TrunkCode");

                    b.Property<DateTime>("Updated");

                    b.Property<string>("VATCode");

                    b.Property<string>("VIN");

                    b.Property<int>("VehicleBodyType");

                    b.Property<int>("VehicleType");

                    b.Property<byte[]>("Version")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate();

                    b.Property<string>("Year");

                    b.HasKey("Id");

                    b.HasIndex("MakeModelId");

                    b.HasIndex("SubscriberId");

                    b.ToTable("Vehicles");
                });

            modelBuilder.Entity("ALPS.API.Entities.Vendor", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<string>("Address");

                    b.Property<string>("City");

                    b.Property<DateTime>("Created");

                    b.Property<string>("Email");

                    b.Property<string>("Fax");

                    b.Property<string>("Mobile");

                    b.Property<string>("Name");

                    b.Property<string>("Notes");

                    b.Property<string>("Phone");

                    b.Property<string>("PrimaryContact");

                    b.Property<string>("State");

                    b.Property<long>("SubscriberId");

                    b.Property<DateTime>("Updated");

                    b.Property<int>("VendorType");

                    b.Property<byte[]>("Version")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate();

                    b.Property<string>("Zip");

                    b.HasKey("Id");

                    b.HasIndex("SubscriberId");

                    b.ToTable("Vendors");
                });

            modelBuilder.Entity("ALPS.API.Entities.Agent", b =>
                {
                    b.HasOne("ALPS.API.Entities.Subscriber", "Subscriber")
                        .WithMany("Agents")
                        .HasForeignKey("SubscriberId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ALPS.API.Entities.Contact", b =>
                {
                    b.HasOne("ALPS.API.Entities.Employer", "Employer")
                        .WithMany("Contacts")
                        .HasForeignKey("EmployerId");

                    b.HasOne("ALPS.API.Entities.Order", "Order")
                        .WithMany("Contacts")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ALPS.API.Entities.Subscriber", "Subscriber")
                        .WithMany("Contacts")
                        .HasForeignKey("SubscriberId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ALPS.API.Entities.Subscriber")
                        .WithMany("Debtors")
                        .HasForeignKey("SubscriberId1");
                });

            modelBuilder.Entity("ALPS.API.Entities.Employer", b =>
                {
                    b.HasOne("ALPS.API.Entities.Subscriber", "Subscriber")
                        .WithMany("Employers")
                        .HasForeignKey("SubscriberId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ALPS.API.Entities.Expense", b =>
                {
                    b.HasOne("ALPS.API.Entities.Order", "Order")
                        .WithMany()
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ALPS.API.Entities.Subscriber", "Subscriber")
                        .WithMany("Expenses")
                        .HasForeignKey("SubscriberId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ALPS.API.Entities.Vendor", "Vendor")
                        .WithMany()
                        .HasForeignKey("VendorId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ALPS.API.Entities.Lienholder", b =>
                {
                    b.HasOne("ALPS.API.Entities.Subscriber", "Subscriber")
                        .WithMany("Lienholders")
                        .HasForeignKey("SubscriberId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ALPS.API.Entities.MakeModel", b =>
                {
                    b.HasOne("ALPS.API.Entities.Subscriber", "Subscriber")
                        .WithMany("MakeModels")
                        .HasForeignKey("SubscriberId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ALPS.API.Entities.Order", b =>
                {
                    b.HasOne("ALPS.API.Entities.Agent", "AssignedTo")
                        .WithMany("Orders")
                        .HasForeignKey("AgentId");

                    b.HasOne("ALPS.API.Entities.Lienholder", "BillToClient")
                        .WithMany()
                        .HasForeignKey("BillToClientId");

                    b.HasOne("ALPS.API.Entities.Contact", "Debtor")
                        .WithMany()
                        .HasForeignKey("DebtorId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ALPS.API.Entities.Lienholder", "Lienholder")
                        .WithMany("Orders")
                        .HasForeignKey("LienholderId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ALPS.API.Entities.Subscriber", "Subscriber")
                        .WithMany("Orders")
                        .HasForeignKey("SubscriberId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ALPS.API.Entities.Vehicle", "Vehicle")
                        .WithMany("Orders")
                        .HasForeignKey("VehicleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ALPS.API.Entities.PoliceDepartment", b =>
                {
                    b.HasOne("ALPS.API.Entities.Subscriber", "Subscriber")
                        .WithMany("PoliceDepartments")
                        .HasForeignKey("SubscriberId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ALPS.API.Entities.Service", b =>
                {
                    b.HasOne("ALPS.API.Entities.Subscriber", "Subscriber")
                        .WithMany("Services")
                        .HasForeignKey("SubscriberId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ALPS.API.Entities.Vehicle", b =>
                {
                    b.HasOne("ALPS.API.Entities.MakeModel", "MakeModel")
                        .WithMany("Vehicles")
                        .HasForeignKey("MakeModelId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ALPS.API.Entities.Subscriber", "Subscriber")
                        .WithMany("Vehicles")
                        .HasForeignKey("SubscriberId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ALPS.API.Entities.Vendor", b =>
                {
                    b.HasOne("ALPS.API.Entities.Subscriber", "Subscriber")
                        .WithMany("Vendors")
                        .HasForeignKey("SubscriberId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
